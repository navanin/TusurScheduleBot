package main

import (
	"fmt"
	"github.com/PuloV/ics-golang"
	"github.com/essentialkaos/translit/v2"
	"io"
	"net/http"
	"os"
	"strings"
	"time"
)

// –ú–∞—Å—Å–∏–≤ –ø–∞—Ä, —Ç–∏–ø–∞ ics.Event - —Å–æ–±—ã—Ç–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
var lessons = make([]ics.Event, 0)

func getFaculty(groupNumber string) string {

	// –§—É–Ω–∫—Ü–∏—è, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∞—è, –∫ –∫–∞–∫–æ–º—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –≥—Ä—É–ø–ø–∞, —Å–æ–≥–ª–∞—Å–Ω–æ –ø–µ—Ä–≤–æ–π —Ü–∏—Ñ—Ä–µ –Ω–æ–º–µ—Ä–∞ –≥—Ä—É–ø–ø—ã.
	// 1 - –†–¢–§,		4 - –§–°–£,	7 - –§–ë,
	// 2 - –†–ö–§, 	5 - –§–í–°,	8 - –≠–§
	// 3 - –§–≠–¢,		6 -  –ì–§,
	// 0 - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –Ω–∞ —ç—Ç—É —Ü–∏—Ñ—Ä—É –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∏ –Æ–§(9) –∏ –§–ò–¢, –ø–æ—ç—Ç–æ–º—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–¥–µ—Ç –ø–æ –≤—Ç–æ—Ä–æ–π —Ü–∏—Ñ—Ä–µ.

	switch groupNumber[0] {
	case '1':
		return "rtf"
	case '2':
		return "rkf"
	case '3':
		return "fet"
	case '4':
		return "fsu"
	case '5':
		return "fvs"
	case '6':
		return "gf"
	case '7':
		return "fb"
	case '8':
		return "ef"
	case '0':
		if groupNumber[1] == '9' {
			return "yuf"
		} else {
			return "fit"
		}
	}

	return ""
}

func removeFiles(fileName string) {

	// –§—É–Ω–∫—Ü–∏—è removeFiles() –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞,
	// –∏ —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è os —É–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.

	if _, err := os.Stat(fileName); err == nil {
		os.Remove(fileName)
	}
}

func getSchedule(groupNumber string) {

	// –§—É–Ω–∫—Ü–∏—è, —Å–æ–∑–¥–∞–Ω–Ω–∞—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å —Å–∞–π—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≤ .ics (iCalendar), –∏ –∑–∞–ø–∏—Å—å –µ–≥–æ –≤ —Ñ–∞–π–ª,
	// –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏–∑ –Ω–µ–≥–æ.

	// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã. –ö–æ—Å—Ç—ã–ª—å, –Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –¢–£–°–£–†–µ –Ω–µ–ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ.

	removeFiles("./groups/" + groupNumber + ".ics")

	// –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ *–Ω–æ–º–µ—Ä_–≥—Ä—É–ø–ø—ã*.ics –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –Ω–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
	file, _ := os.Create("./groups/" + groupNumber + ".ics")

	// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è. –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ getFaculty() –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –≤ —Å—Å—ã–ª–∫—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç, –∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è groupNumber —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–æ–º–µ—Ä —É—á–µ–±–Ω–æ–π –≥—Ä—É–ø–ø—ã.
	url := "https://timetable.tusur.ru/faculties/" + getFaculty(groupNumber) + "/groups/" + groupNumber + ".ics"

	// GET-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
	resp, _ := http.Get(url)

	// –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –Ω–∞ –∑–∞–ø—Ä–æ—Å GET, –æ—Ç–≤–µ—Ç–∞ –≤ —Ñ–∞–π–ª
	defer resp.Body.Close()
	defer file.Close()
	_, _ = io.Copy(file, resp.Body)

}

func parseSchedule(groupNumber string, date string) {

	// –§—É–Ω–∫—Ü–∏—è parseSchedule() –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–∏—Å–∫ –ø–∞—Ä –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å –≤ —Ñ–∞–π–ª–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏ –ø–æ—Å–ª–µ–¥—É—é—â—É—é –ø–µ—Ä–µ–¥–∞—á—É –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö
	// –ø–∞—Ä –≤ –º–∞—Å—Å–∏–≤ lessons, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–Ω—è—Ç–∏—è—Ö –¥–æ –∫–æ–Ω—Ü–∞ —Ä–∞–±–æ—Ç—ã —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º.

	groupNumber = translit.EncodeToICAO(groupNumber)

	// –§—É–Ω–∫—Ü–∏—è getSchedule() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã.
	getSchedule(groupNumber)

	// –ú–∞—Å—Å–∏–≤ —Å–æ–±—ã—Ç–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—è, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –∑–∞–Ω—è—Ç–∏—è
	lessons = make([]ics.Event, 0)

	// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, —É–∫–∞–∑–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞, –ø–æ–¥–ª–µ–∂–∞—â–µ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥—É.
	parser := ics.New()
	ics.FilePath = "./"
	ics.DeleteTempFiles = false
	ics.RepeatRuleApply = true
	inputChan := parser.GetInputChan()
	inputChan <- "./groups/" + groupNumber + ".ics"

	// parser.Wait() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ø–∞—Ä—Å–µ—Ä–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é cal, –Ω—É–ª–µ–≤–æ–π –∏–Ω–¥–µ–∫—Å.
	parser.Wait()
	cal, _ := parser.GetCalendars()

	// –ü–µ—Ä–µ–±–æ—Ä —Å–æ–±—ã—Ç–∏–π, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
	for _, e := range cal[0].GetEvents() {
		// –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —Å–æ–±—ã—Ç–∏—è, –¥–∞—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏.
		if e.GetStart().Format(ics.IcsFormatWholeDay) == date {

			// –ü—Ä–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏–∏ —É—Å–ª–æ–≤–∏—è, —Å–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –º–∞—Å—Å–∏–≤ –ø–∞—Ä.
			lessons = append(lessons, e)
		} else {

			// –ò–Ω–∞—á–µ, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ.
			continue
		}
	}
	// –ü–æ—Å–ª–µ –ø–µ—Ä–µ–±–æ—Ä–∞ —Å–æ–±—ã—Ç–∏–π –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏—Ö –≤ –º–∞—Å—Å–∏–≤,
	// –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è sortArray() –¥–ª—è –µ–≥–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
	sortArray()
}

func sortArray() {

	// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø—É–∑—ã—Ä—å–∫–æ–º.
	// –°–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞ —Å–æ–±—ã—Ç–∏—è. –û–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è GO —É–º–µ–µ—Ç —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —Å—Ç—Ä–æ–∫–∏.
	// "10:00" > "09:00" == true

	for i := 0; i < len(lessons)-1; i++ {
		for j := 0; j < len(lessons)-i-1; j++ {
			if lessons[j].GetStart().Format("15:04") > lessons[j+1].GetStart().Format("15:04") {
				lessons[j], lessons[j+1] = lessons[j+1], lessons[j]
			}
		}
	}
}

func formMessage(groupNumber string, date string) string {

	// –§—É–Ω–∫—Ü–∏—è formMessage() –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–µ—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
	// –í –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –ø–æ–ª—É—á–∞–µ—Ç –¥–∞—Ç—É –∏ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã.
	// –ü–æ —Å–∫–æ–ª—å–∫—É –º–∞—Å—Å–∏–≤ —Å –ø–∞—Ä–∞–º–∏ —è–≤–ª—è–µ—Ç—Å—è –≥–ª–æ–±–∞–ª—å–Ω—ã–º, –µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ —Ñ—É–Ω–∫—Ü–∏—é.

	var message = ""
	var lessonType string // –õ–µ–∫—Ü–∏—è/–ü—Ä–∞–∫—Ç–∏–∫–∞/–°–∞–º.—Ä–∞–±/–õ–∞–±.—Ä–∞–± - –ø–æ–ª—É—á–∞–µ—Ç –∏–∑ –ø–æ–ª—è —Å–æ–±—ã—Ç–∏—è "Description".
	var teacher string    // –§–∞–º–∏–ª–∏—è –ò.–û. –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è - –ø–æ–ª—É—á–∞–µ—Ç –∏–∑ –ø–æ–ª—è —Å–æ–±—ã—Ç–∏—è "Description".
	var classroom string  // –Ω–æ–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏ - –ø–æ–ª—É—á–∞–µ—Ç –∏–∑ –ø–æ–ª—è —Å–æ–±—ã—Ç–∏—è "Location" (–Ω–µ –ø—É—Ç–∞—Ç—å —Å "Geo").

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
	var fmtDate, _ = time.Parse("20060102", date)

	// –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–ø–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.
	message += fmt.Sprintf("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã %s –Ω–∞ %s (%s).\n–í—Å–µ–≥–æ –∑–∞–Ω—è—Ç–∏–π - %d.\n\n", groupNumber, fmtDate.Format("02.01.2006"), getRuWeekDay(fmtDate), len(lessons))

	if len(lessons) == 0 {
		message += "–ó–∞–Ω—è—Ç–∏–π –Ω–µ—Ç - –≤—ã—Ö–æ–¥–Ω—ã–µ ü•≥"
	}

	// –¶–∏–∫–ª–∏—á–Ω—ã–π –ø–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞ –ø–∞—Ä, –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º.
	for i := 0; i <= len(lessons)-1; i++ {

		// !–ö–æ—Å—Ç—ã–ª—å!
		// –¢–∞–∫ –∫–∞–∫ —Ç–∏–ø –ø–∞—Ä—ã –∏ –ø—Ä–µ–ø–æ–¥ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –æ–¥–Ω–æ–º –∏ —Ç–æ–º –∂–µ –ø–æ–ª–µ, –ø—Ä–∏—Ö–æ–¥–∏—Ç—å—Å—è
		// –ø—Ä–∏–±–µ–≥–∞—Ç—å –∫ –ø–æ–¥–æ–±–Ω–æ–º—É –¥–µ–ª–µ–Ω–∏—é –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.
		// –ê—É–¥–∏—Ç–æ—Ä–∏–∏ —Ä–∞–∑–¥–µ–ª—è—é—Ç—Å—è —Å–ª–µ—à–∞–º–∏, –∏–∑-–∑–∞ —ç—Ç–æ–≥–æ –∏—Ö —É–±–∏—Ä–∞—é —Å –ø–æ–º–æ—â—å—é strings.ReplaceAll().
		descriptionSplit := strings.Split(lessons[i].GetDescription(), "\\, ")
		lessonType = descriptionSplit[0]
		teacher = descriptionSplit[1]
		classroom = strings.ReplaceAll(lessons[i].GetLocation(), "\\", "")

		// –ù–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ —Ü–∏–∫–ª–∞, –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Å–ª–µ–¥—É—é—â–∞—è –ø–∞—Ä–∞.
		message += fmt.Sprintf("üìñ %s (%s)\n ‚Äçüë® –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: %s\n üè† –ê—É–¥–∏—Ç–æ—Ä–∏—è: %s\n üïõ –í—Ä–µ–º—è: %s-%s\n\n",
			lessons[i].GetSummary(), lessonType, teacher, classroom, //lessons[i].GetLocation(),
			lessons[i].GetStart().Format("15:04"), lessons[i].GetEnd().Format("15:04"))
	}
	return message
}
